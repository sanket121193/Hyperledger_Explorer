false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket8:sanket123@localhost:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer': 
   { name: 'balance-transfer',
     profile: './connection-profile/first-network.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 21636


postgres://sanket8:sanket123@localhost:5432/fabricexplorer

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:21667) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
Error :  [ 'Channel name [%s] already exist in DB , Kindly re-run the DB scripts to proceed',
  'mychannel' ]
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
Error :  [ 'Explorer is closing due to channel name [%s] is already exist in DB',
  'mychannel' ]
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket9:sanket123@localhost:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer': 
   { name: 'balance-transfer',
     profile: './connection-profile/first-network.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 22038


postgres://sanket9:sanket123@localhost:5432/fabricexplorer

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:22060) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050


Synchronizer pid is 22060


saveTransaction  true
block_row.blocknum  3
status  true
saveTransaction  true
block_row.blocknum  0
status  true
saveTransaction  true
block_row.blocknum  1
status  true
saveTransaction  true
block_row.blocknum  2
status  true
req.body { user: 'sanket9',
  password: 'sanket123',
  network: 'balance-transfer' }
Network: balance-transfer enableAuthentication false
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  4
status  true
Broadcast >> {"title":"Block 4 added to Channel: mychannel","type":"block","message":"Block 4 established with 1 tx","time":"2019-08-03T05:47:39.340Z","txcount":1,"datahash":"7703997239d5aa45a6139a01bdd71037fc41075177b4c61d1c60358e17e69985"}
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  5
status  true
Broadcast >> {"title":"Block 5 added to Channel: mychannel","type":"block","message":"Block 5 established with 1 tx","time":"2019-08-03T06:14:05.169Z","txcount":1,"datahash":"fc7c8102852024822d6b27040dc102222401e44d456eff7314b59d339803b282"}
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Sat Aug 03 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 7719da7e4ada896f426b2232d263b0df461af117b4e5e476ed09949b7afbcb17
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at process.shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at Signal.wrap.onsignal (internal/process.js:197:44)
