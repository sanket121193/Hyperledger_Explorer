false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://hppoc:password@127.0.0.1:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'first-network': 
   { name: 'first-network',
     profile: './connection-profile/first-network.json' } }
 client_configs.name  first-network  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 

 ********* call to initializeDetachClient **********
initializeDetachClient --> client_config  { name: 'first-network',
  profile: './connection-profile/first-network.json' }  name  first-network
FabricUtils.createDetachClient 
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at FabricConfig.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricConfig.js:31:22)
    at FabricClient.initializeDetachClient (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:198:16)
    at FabricClient.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:176:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)


Please open web browser to access ：http://localhost:8080/


pid is 27319


Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://hppoc:password@127.0.0.1:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'first-network': 
   { name: 'first-network',
     profile: './connection-profile/first-network.json' } }
 client_configs.name  first-network  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 

 ********* call to initializeDetachClient **********
initializeDetachClient --> client_config  { name: 'first-network',
  profile: './connection-profile/first-network.json' }  name  first-network
FabricUtils.createDetachClient 
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at FabricConfig.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricConfig.js:31:22)
    at FabricClient.initializeDetachClient (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:198:16)
    at FabricClient.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:176:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)


Please open web browser to access ：http://localhost:8080/


pid is 27787


Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://hppoc:password@127.0.0.1:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'first-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json' } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 6295


postgres://hppoc:password@127.0.0.1:5432/fabricexplorer

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:6318) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050


Synchronizer pid is 6318


saveTransaction  true
block_row.blocknum  2
status  true
saveTransaction  true
block_row.blocknum  0
status  true
saveTransaction  true
block_row.blocknum  1
status  true
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
req.body { user: 'hppoc', password: 'password', network: 'first-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'hppoc', password: 'password', network: 'first-network' }
Network: balance-transfer-network enableAuthentication true
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at process.shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at Signal.wrap.onsignal (internal/process.js:197:44)
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket:@127.0.0.1:5432/fabricexplorer
error when connecting to db: { error: password authentication failed for user "sanket"
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 102,
  severity: 'FATAL',
  code: '28P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'auth.c',
  line: '328',
  routine: 'auth_failed' }
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json' } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 8980


postgres://sanket:@127.0.0.1:5432/fabricexplorer
error when connecting to db: { error: password authentication failed for user "sanket"
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 102,
  severity: 'FATAL',
  code: '28P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'auth.c',
  line: '328',
  routine: 'auth_failed' }

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:9002) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
error when connecting to db: TypeError: Cannot read property 'on' of undefined
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:68:16)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: "callback" argument must be a function
    at setTimeout (timers.js:450:11)
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:85:5)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
error when connecting to db: TypeError: Cannot read property 'on' of undefined
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:68:16)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: "callback" argument must be a function
    at setTimeout (timers.js:450:11)
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:85:5)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket:12345@127.0.0.1:5432/fabricexplorer
error when connecting to db: { error: password authentication failed for user "sanket"
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 102,
  severity: 'FATAL',
  code: '28P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'auth.c',
  line: '328',
  routine: 'auth_failed' }
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json' } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 9049


postgres://sanket:12345@127.0.0.1:5432/fabricexplorer
error when connecting to db: { error: password authentication failed for user "sanket"
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 102,
  severity: 'FATAL',
  code: '28P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'auth.c',
  line: '328',
  routine: 'auth_failed' }

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:9071) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
error when connecting to db: TypeError: Cannot read property 'on' of undefined
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:68:16)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: "callback" argument must be a function
    at setTimeout (timers.js:450:11)
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:85:5)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
error when connecting to db: TypeError: Cannot read property 'on' of undefined
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:68:16)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: "callback" argument must be a function
    at setTimeout (timers.js:450:11)
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:85:5)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket1:12345@127.0.0.1:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json' } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 10418


postgres://sanket1:12345@127.0.0.1:5432/fabricexplorer

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:10441) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050


Synchronizer pid is 10441


saveTransaction  true
block_row.blocknum  2
status  true
saveTransaction  true
block_row.blocknum  0
status  true
saveTransaction  true
block_row.blocknum  1
status  true
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
req.body { user: 'sanket1',
  password: '12345',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication true
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at process.shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at Signal.wrap.onsignal (internal/process.js:197:44)
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket2:sanket123@127.0.0.1:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 11648


postgres://sanket2:sanket123@127.0.0.1:5432/fabricexplorer

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:11670) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050


Synchronizer pid is 11670


saveTransaction  true
block_row.blocknum  2
status  true
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket2:sanket123@127.0.0.1:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
{ Error: listen EADDRINUSE :::8080
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at startExplorer (/home/sanket/Explorer_Setup/blockchain-explorer/main.js:123:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
  errno: 'EADDRINUSE',
  code: 'EADDRINUSE',
  syscall: 'listen',
  address: '::',
  port: 8080 }
postgres://sanket2:sanket123@127.0.0.1:5432/fabricexplorer

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:11721) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
saveTransaction  true
block_row.blocknum  0
status  true
saveTransaction  true
block_row.blocknum  1
status  true
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
postgres://sanket2:sanket123@127.0.0.1:5432/fabricexplorer


Synchronizer pid is 11721


saveTransaction  false
block_row.blocknum  2
status  false
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer-network': 
   { name: 'balance-transfer-network',
     profile: './connection-profile/balance-transfer.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer-network  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at process.shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at Signal.wrap.onsignal (internal/process.js:197:44)
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
FabricUtils.createDetachClient 
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
{ Error: listen EADDRINUSE :::8080
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at startExplorer (/home/sanket/Explorer_Setup/blockchain-explorer/main.js:123:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
  errno: 'EADDRINUSE',
  code: 'EADDRINUSE',
  syscall: 'listen',
  address: '::',
  port: 8080 }
postgres://sanket2:sanket123@127.0.0.1:5432/fabricexplorer

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:11772) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050


Synchronizer pid is 11772


saveTransaction  false
block_row.blocknum  2
status  false
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at process.shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at Signal.wrap.onsignal (internal/process.js:197:44)
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
req.body { user: 'sanket2',
  password: 'sanket123',
  network: 'balance-transfer-network' }
Network: balance-transfer-network enableAuthentication false
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> 76099ab8fedf0762e33a0a0fb25189c7b93cce0d5ed6314a1b18e4496a5a520f
SyncServices.synchNetworkConfigToDB client  balance-transfer-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer-network] and client : [balance-transfer-network]
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: Cannot read property '_channels' of null
    at FabricClient.getChannels (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:709:26)
    at SyncServices.synchNetworkConfigToDB (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncService.js:66:27)
    at SyncPlatform.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:115:38)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at process.on.up (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:62:2)
    at emitTwo (events.js:126:13)
    at process.emit (events.js:214:7)
    at emitPendingUnhandledRejections (internal/process/promises.js:108:22)
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: Cannot read property '_channels' of null
    at FabricClient.getChannels (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:709:26)
    at SyncPlatform.isChannelEventHubConnected (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:143:53)
    at Timeout.setInterval [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:129:10)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
db error Error: write after end
    at writeAfterEnd (_stream_writable.js:236:12)
    at Socket.Writable.write (_stream_writable.js:287:5)
    at Socket.write (net.js:711:40)
    at Connection.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:319:22)
    at Client.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/client.js:453:21)
    at PgService.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:105:15)
    at Persist.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/Persist.js:71:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:81:21)
    at shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at process.on.up (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:62:2)
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
Error: write after end
    at writeAfterEnd (_stream_writable.js:236:12)
    at Socket.Writable.write (_stream_writable.js:287:5)
    at Socket.write (net.js:711:40)
    at Connection.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:319:22)
    at Client.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/client.js:453:21)
    at PgService.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:105:15)
    at Persist.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/Persist.js:71:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:81:21)
    at shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at process.on.up (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:62:2)
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
db error Error: write after end
    at writeAfterEnd (_stream_writable.js:236:12)
    at Socket.Writable.write (_stream_writable.js:287:5)
    at Socket.write (net.js:711:40)
    at Connection.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:319:22)
    at Client.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/client.js:453:21)
    at PgService.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:105:15)
    at Persist.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/Persist.js:71:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:81:21)
    at shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at process.on.up (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:73:2)
/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:73
					throw err;
					^

Error: write after end
    at writeAfterEnd (_stream_writable.js:236:12)
    at Socket.Writable.write (_stream_writable.js:287:5)
    at Socket.write (net.js:711:40)
    at Connection.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:319:22)
    at Client.end (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/client.js:453:21)
    at PgService.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:105:15)
    at Persist.closeconnection (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/Persist.js:71:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:81:21)
    at shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at process.on.up (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:73:2)
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
2019-08-02T11:03:37.718Z - [31merror[39m: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7051
2019-08-02T11:03:37.719Z - [31merror[39m: [Channel.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7051
initializeChannelFromDiscover  mychannel
2019-08-02T11:03:40.726Z - [31merror[39m: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7051
2019-08-02T11:03:40.726Z - [31merror[39m: [Channel.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7051
E0802 16:33:50.429175656   11648 ssl_transport_security.cc:1229] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0802 16:34:00.733303204   11648 ssl_transport_security.cc:1229] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0802 16:34:17.894424757   11648 ssl_transport_security.cc:1229] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket5:sanket123@192.168.1.122:5432/fabricexplorer
error when connecting to db: { Error: connect ECONNREFUSED 192.168.1.122:5432
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '192.168.1.122',
  port: 5432 }
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer': 
   { name: 'balance-transfer',
     profile: './connection-profile/balance-transfer.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer  client_configs.profile  ./connection-profile/balance-transfer.json
FabricUtils.createFabricClient 

 ********* call to initializeDetachClient **********
initializeDetachClient --> client_config  { name: 'balance-transfer',
  profile: './connection-profile/balance-transfer.json',
  enableAuthentication: false }  name  balance-transfer
FabricUtils.createDetachClient 
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at FabricConfig.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricConfig.js:31:22)
    at FabricClient.initializeDetachClient (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:198:16)
    at FabricClient.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/FabricClient.js:176:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)


Please open web browser to access ：http://localhost:8080/


pid is 26279


error when connecting to db: TypeError: Cannot read property 'on' of undefined
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:68:16)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: "callback" argument must be a function
    at setTimeout (timers.js:450:11)
    at Timeout.handleDisconnect [as _onTimeout] (/home/sanket/Explorer_Setup/blockchain-explorer/app/persistence/postgreSQL/PgService.js:85:5)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
TypeError: channel.getName is not a function
    at Proxy.getCurrentChannel (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/Proxy.js:80:65)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
Received kill signal, shutting down gracefully
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket6:sanket123@localhost:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'first-network': 
   { name: 'first-network',
     profile: './connection-profile/first-network.json',
     enableAuthentication: false } }
 client_configs.name  first-network  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
{ Error: ENOENT: no such file or directory, open '/fabric-path/first-network/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem'
    at Object.fs.openSync (fs.js:646:18)
    at Object.fs.readFileSync (fs.js:551:33)
    at FabricGateway._enrollUserIdentity (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/gateway/FabricGateway.js:187:19)
    at FabricGateway.initialize (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/gateway/FabricGateway.js:116:28)
    at <anonymous>
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/fabric-path/first-network/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem' }

 ********* call to initializeDetachClient **********
initializeDetachClient --> client_config  { name: 'first-network',
  profile: './connection-profile/first-network.json',
  enableAuthentication: false }  name  first-network
initializeDetachClient, network config)  { name: 'first-network',
  version: '1.0.0',
  license: 'Apache-2.0',
  client: 
   { tlsEnable: true,
     adminUser: 'admin',
     adminPassword: 'adminpw',
     enableAuthentication: false,
     organization: 'Org1',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations: 
   { Org1MSP: 
      { mspid: 'Org1MSP',
        fullpath: true,
        adminPrivateKey: [Object],
        signedCert: [Object] } },
  peers: 
   { 'peer0.org1.example.com': 
      { tlsCACerts: [Object],
        url: 'grpcs://localhost:7051',
        eventUrl: 'grpcs://localhost:7053',
        grpcOptions: [Object] } } }

************************************* initializeDetachClient *************************************************
Error : Failed to connect client peer, please check the configuration and peer status
Info :  Explorer will continue working with only DB data
************************************** initializeDetachClient ************************************************

FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 21369


FabricConfig, this.config.channels  mychannel
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
Error :  [ 'Default client peer is down and no channel details available database' ]
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket6:sanket123@localhost:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'first-network': 
   { name: 'first-network',
     profile: './connection-profile/first-network.json',
     enableAuthentication: false } }
 client_configs.name  first-network  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> e8c3019abf7608329cbdf248d2682ab1a555cabd90d1644533d33b88add06c34
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 21596


postgres://sanket6:sanket123@localhost:5432/fabricexplorer

Sync process is started for the network : [first-network] and client : [first-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:21618) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> e8c3019abf7608329cbdf248d2682ab1a555cabd90d1644533d33b88add06c34
SyncServices.synchNetworkConfigToDB client  first-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050


Synchronizer pid is 21618


saveTransaction  true
block_row.blocknum  4
status  true
Broadcast >> {"title":"Block 4 added to Channel: mychannel","type":"block","message":"Block 4 established with 1 tx","time":"2019-08-02T11:33:45.539Z","txcount":1,"datahash":"98f3ea3ee43986d86346fa31ef9dd8f532b5f25a251e61942590fc5bdf46a7e3"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

saveTransaction  true
block_row.blocknum  0
status  true
Broadcast >> {"title":"Block 0 added to Channel: mychannel","type":"block","message":"Block 0 established with 1 tx","time":"2019-08-02T11:32:42.000Z","txcount":1,"datahash":"d27844286561d6a88b4f5a5c3f87bb75dcccd0724fcd80d7ff7d2647fac325e7"}
initializeChannelFromDiscover  mychannel
saveTransaction  true
block_row.blocknum  1
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
status  true
Broadcast >> {"title":"Block 1 added to Channel: mychannel","type":"block","message":"Block 1 established with 1 tx","time":"2019-08-02T11:32:56.000Z","txcount":1,"datahash":"52cc8f14590f655dc5ed51ac426428d7f49a5ea42e2c62ce21efc7dc46f30b12"}
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

saveTransaction  true
block_row.blocknum  2
status  true
Broadcast >> {"title":"Block 2 added to Channel: mychannel","type":"block","message":"Block 2 established with 1 tx","time":"2019-08-02T11:32:59.000Z","txcount":1,"datahash":"efce0cdc56f075be3cf63b811cbc344ec21ddada20d65af639c3ab604965ef22"}
saveTransaction  true
block_row.blocknum  3
status  true
Broadcast >> {"title":"Block 3 added to Channel: mychannel","type":"block","message":"Block 3 established with 1 tx","time":"2019-08-02T11:33:04.092Z","txcount":1,"datahash":"21b67f17f43b51ad2fabbe03065d67ebd6ac7d9969409a3bf43cb94ca81fd891"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [first-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> e8c3019abf7608329cbdf248d2682ab1a555cabd90d1644533d33b88add06c34
SyncServices.synchNetworkConfigToDB client  first-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [first-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> e8c3019abf7608329cbdf248d2682ab1a555cabd90d1644533d33b88add06c34
SyncServices.synchNetworkConfigToDB client  first-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [first-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> e8c3019abf7608329cbdf248d2682ab1a555cabd90d1644533d33b88add06c34
SyncServices.synchNetworkConfigToDB client  first-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [first-network] and client : [first-network]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Channel genesis hash for channel [mychannel] >> e8c3019abf7608329cbdf248d2682ab1a555cabd90d1644533d33b88add06c34
SyncServices.synchNetworkConfigToDB client  first-network  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
Error: ChannelEventHub has been shutdown
    at ChannelEventHub.disconnect (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/fabric-client/lib/ChannelEventHub.js:601:21)
    at FabricEvent.disconnectChannelEventHub (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:141:19)
    at FabricEvent.disconnectEventHubs (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/FabricEvent.js:159:10)
    at SyncPlatform.destroy (/home/sanket/Explorer_Setup/blockchain-explorer/app/platform/fabric/sync/SyncPlatform.js:198:18)
    at Synchronizer.close (/home/sanket/Explorer_Setup/blockchain-explorer/app/Synchronizer.js:84:18)
    at process.shutDown (/home/sanket/Explorer_Setup/blockchain-explorer/sync.js:37:16)
    at emitOne (events.js:116:13)
    at process.emit (events.js:211:7)
    at Signal.wrap.onsignal (internal/process.js:197:44)
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket7:sanket123@localhost:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'first-network': 
   { name: 'first-network',
     profile: './connection-profile/first-network.json',
     enableAuthentication: false } }
 client_configs.name  first-network  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
2019-08-02T11:51:10.969Z - [31merror[39m: [Channel.js]: Channel:mychannel received discovery error:access denied
2019-08-02T11:51:10.970Z - [31merror[39m: [Channel.js]: Error: Channel:mychannel Discovery error:access denied

 ********* call to initializeDetachClient **********
initializeDetachClient --> client_config  { name: 'first-network',
  profile: './connection-profile/first-network.json',
  enableAuthentication: false }  name  first-network
initializeDetachClient, network config)  { name: 'first-network',
  version: '1.0.0',
  license: 'Apache-2.0',
  client: 
   { tlsEnable: true,
     adminUser: 'admin',
     adminPassword: 'adminpw',
     enableAuthentication: false,
     organization: 'Org1',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations: 
   { Org1MSP: 
      { mspid: 'Org1MSP',
        fullpath: true,
        adminPrivateKey: [Object],
        signedCert: [Object] } },
  peers: 
   { 'peer0.org1.example.com': 
      { tlsCACerts: [Object],
        url: 'grpcs://localhost:7051',
        eventUrl: 'grpcs://localhost:7053',
        grpcOptions: [Object] } } }

************************************* initializeDetachClient *************************************************
Error : Failed to connect client peer, please check the configuration and peer status
Info :  Explorer will continue working with only DB data
************************************** initializeDetachClient ************************************************

FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 2748


FabricConfig, this.config.channels  mychannel
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
Error :  [ 'Default client peer is down and no channel details available database' ]
Received kill signal, shutting down gracefully
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>
Closed out connections
false 'ssl-certs' '/home/sanket/Explorer_Setup/blockchain-explorer/ssl-certs'
postgres://sanket8:sanket123@localhost:5432/fabricexplorer
******* Initialization started for hyperledger fabric platform ******, { 'balance-transfer': 
   { name: 'balance-transfer',
     profile: './connection-profile/first-network.json',
     enableAuthentication: false } }
 client_configs.name  balance-transfer  client_configs.profile  ./connection-profile/first-network.json
FabricUtils.createFabricClient 
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
FabricUtils.createDetachClient 


Please open web browser to access ：http://localhost:8080/


pid is 4998


postgres://sanket8:sanket123@localhost:5432/fabricexplorer

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
(node:5023) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050


Synchronizer pid is 5023


saveTransaction  true
block_row.blocknum  3
status  true
saveTransaction  true
block_row.blocknum  0
status  true
saveTransaction  true
block_row.blocknum  1
status  true
saveTransaction  true
block_row.blocknum  2
status  true
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  4
status  true
Broadcast >> {"title":"Block 4 added to Channel: mychannel","type":"block","message":"Block 4 established with 1 tx","time":"2019-08-02T12:03:39.742Z","txcount":1,"datahash":"51a68ff3444655ec30e2b92de4a997f5453d802f4389bcb10d5050e2da7e3e8f"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  5
status  true
Broadcast >> {"title":"Block 5 added to Channel: mychannel","type":"block","message":"Block 5 established with 1 tx","time":"2019-08-02T12:18:13.970Z","txcount":1,"datahash":"c41f97a394b7a92ef465c2b9110be68249c2af2e110e52df2ad8de1b2bf1a950"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  6
status  true
Broadcast >> {"title":"Block 6 added to Channel: mychannel","type":"block","message":"Block 6 established with 1 tx","time":"2019-08-02T12:32:55.697Z","txcount":1,"datahash":"6e57c067943d6b1db0e327f03ea606c5d7b64e50c974959ffb63411f8f541469"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  7
status  true
Broadcast >> {"title":"Block 7 added to Channel: mychannel","type":"block","message":"Block 7 established with 1 tx","time":"2019-08-02T12:49:11.300Z","txcount":1,"datahash":"8ac13ad8210b8387256d89b0e1da7ac06b9662ab6c084812848617b202f493f0"}
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
req.body { user: 'sanket2',
  password: 'sanket123',
  network: 'balance-transfer' }
Network: balance-transfer enableAuthentication false
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  8
status  true
Broadcast >> {"title":"Block 8 added to Channel: mychannel","type":"block","message":"Block 8 established with 1 tx","time":"2019-08-02T12:51:35.991Z","txcount":1,"datahash":"5a79ac837c557d6545b377ab712bdeb941f6e26a4cca43bc24263f92bb3a4044"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
saveTransaction  true
block_row.blocknum  9
status  true
Broadcast >> {"title":"Block 9 added to Channel: mychannel","type":"block","message":"Block 9 established with 1 tx","time":"2019-08-02T13:06:18.211Z","txcount":1,"datahash":"f9d7b85e628aafb5d4e0d53003d7b81cdb6f3f74df015a29d13b07f6588805ae"}
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
initializeChannelFromDiscover  mychannel
SyncPlatform initialize()-- @  Fri Aug 02 2019

Sync process is started for the network : [balance-transfer] and client : [balance-transfer]
config.client.tlsEnable  true
FabricConfig, this.config.channels  mychannel
An identity for the admin user: admin already exists in the wallet
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

Channel genesis hash for channel [mychannel] >> 06cfd23ba060e68014f07cf0ea384650f8635b6b78bfd94a9ebb80275bcb0b37
SyncServices.synchNetworkConfigToDB client  balance-transfer  channel_name  mychannel
initializeChannelFromDiscover  mychannel
 FabricClient.discover_results  endpoint  { host: 'orderer.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer2.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer3.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer4.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050 

 FabricClient.discover_results  endpoint  { host: 'orderer5.example.com', port: 7050 }

initializeChannelFromDiscover.discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050 

insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer3.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer4.example.com:7050
insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer5.example.com:7050
{ Error: 2 UNKNOWN: Stream removed
    at Object.exports.createStatusError (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/common.js:91:15)
    at ClientDuplexStream._emitStatusIfDone (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/client.js:233:26)
    at ClientDuplexStream._receiveStatus (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/client.js:211:8)
    at Object.onReceiveStatus (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/client_interceptors.js:1306:15)
    at InterceptingListener._callNext (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/client_interceptors.js:568:42)
    at InterceptingListener.onReceiveStatus (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/client_interceptors.js:618:8)
    at /home/sanket/Explorer_Setup/blockchain-explorer/node_modules/fabric-network/node_modules/grpc/src/client_interceptors.js:1123:18
  code: 2,
  metadata: Metadata { _internal_repr: {} },
  details: 'Stream removed' }
db error { error: terminating connection due to administrator command
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 116,
  severity: 'FATAL',
  code: '57P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '2913',
  routine: 'ProcessInterrupts' }
db error { error: terminating connection due to administrator command
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 116,
  severity: 'FATAL',
  code: '57P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '2913',
  routine: 'ProcessInterrupts' }
<<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
{ error: terminating connection due to administrator command
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 116,
  severity: 'FATAL',
  code: '57P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '2913',
  routine: 'ProcessInterrupts' }
{ error: terminating connection due to administrator command
    at Connection.parseE (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:554:11)
    at Connection.parseMessage (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:379:19)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:119:22)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:601:20)
  name: 'error',
  length: 116,
  severity: 'FATAL',
  code: '57P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '2913',
  routine: 'ProcessInterrupts' }
<<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
db error Error: Connection terminated unexpectedly
    at Connection.con.once (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/client.js:200:9)
    at Object.onceWrapper (events.js:313:30)
    at emitNone (events.js:106:13)
    at Connection.emit (events.js:208:7)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:129:10)
    at emitNone (events.js:111:20)
    at Socket.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:139:11)
    at process._tickCallback (internal/process/next_tick.js:181:9)
<<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
Error: Connection terminated unexpectedly
    at Connection.con.once (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/client.js:200:9)
    at Object.onceWrapper (events.js:313:30)
    at emitNone (events.js:106:13)
    at Connection.emit (events.js:208:7)
    at Socket.<anonymous> (/home/sanket/Explorer_Setup/blockchain-explorer/node_modules/pg/lib/connection.js:129:10)
    at emitNone (events.js:111:20)
    at Socket.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:139:11)
    at process._tickCallback (internal/process/next_tick.js:181:9)
